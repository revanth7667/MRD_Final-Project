---
title: "Los Angeles Crime Analysis"
author: 
format: pdf
editor: visual
echo: FALSE
output: FALSE
geometry: margin = 1.0cm
---

```{r}
#Load all the required packages and libraries
library(AER)
library(car)
library(caret)
library(caTools)
#library(corrplot)
#library(cvms)
library(dplyr)
library(geosphere)
#library(ggmap)
library(ggplot2)
#library(ggpubr)
library(gridExtra)
library(gtsummary)
#library(knitr)
#library(leaflet)
library(lubridate)
#library(maps)
library(Metrics)
#library(openintro)
library(pROC)
#library(purrr)
#library(stargazer)
#library(stringr)
library(tidyverse)

# Resolve package conflicts
#library(conflicted)
#conflict_prefer("filter", "dplyr")
#conflict_prefer("lag", "dplyr")
```

```{r}
#Load the data
df_precinct <- read.csv("../data/Precinct_Location.csv")
df <- read.csv('/Users/revanth/Documents/MIDS/Semester 1/MRD/Group Project/Datasets/crime.csv') #change this path later if required
```

```{r}
str(df)
```

```{r}
#Date Related Cleanings
#Clean the Data Columns and create difference
df$DATE.OCC <- substr(df$DATE.OCC,1,10) 
df$DATE.OCC <- as.Date(df$DATE.OCC, "%m/%d/%Y")

df$Date.Rptd <- substr(df$Date.Rptd,1,10) 
df$Date.Rptd <- as.Date(df$Date.Rptd, "%m/%d/%Y")

df$rpt_diff <- df$Date.Rptd- df$DATE.OCC
```

Important Step here, Adjust if required:

```{r}
#Dropping data after Sept-2023 as this may give outlier as seen during EDA, adjust to Oct-01 if required
df <- df[df$DATE.OCC < as.Date("09/01/2023", "%m/%d/%Y"), ]
```

```{r}
#Calculate Year, Month and Day
df$dt_year = format(df$DATE.OCC,"%Y")
df$dt_month = as.factor(format(df$DATE.OCC,"%m"))
df$dt_day = format(df$DATE.OCC,"%d")
df$dt_weekday <- as.factor(wday(df$DATE.OCC, label=TRUE))
```

```{r}
#Calculate Distance to Precinct in Miles
df <- df %>% left_join( df_precinct[,c("precinct_code","precinct_lat","precinct_long")], 
        by=c('AREA'='precinct_code'))

df$dist_to_precinct <- distHaversine(df[,c("LON","LAT")],df[,c("precinct_long","precinct_lat")])*0.00062137
```

```{r}
#create text column for crime_type
df$crime_type <- as.factor(ifelse(df$Part.1.2==1,"serious","non-serious"))
```

```{r}
#clean time 
df$time_hr <- as.integer(substr(str_pad(as.character(df$TIME.OCC),4,pad=0),1,2))
```

```{r}
#create binary column if weapon is involved
df$weapons_binary <- as.factor(ifelse(is.na(df$Weapon.Used.Cd) | (df$Weapon.Used.Cd==""),0,1))
```

```{r}
#Performing the following Cleanings as per Suim's Logistic Regression requirements

#Cleaning Descent
df$Vict.Descent[df$Vict.Descent == ""] <- "X"
df$Vict.Descent[df$Vict.Descent == "-"] <- "X"
df$Vict.Descent <- as.factor(df$Vict.Descent)

#Cleaning Gender 
df$Vict.Sex[df$Vict.Sex == ""] <- "X"
df$Vict.Sex[df$Vict.Sex == "-"] <- "X"
df$Vict.Sex <- as.factor(df$Vict.Sex)
```

## EDA

```{r}
ggplot(df, aes(x = crime_type, fill = crime_type)) +
  geom_bar() +
  labs(title = "Distribution of Crime Types", x = "Crime Types", y = "Count") +
  geom_text(aes(label = after_stat(count)), stat = "count", vjust = 1.5) +   # Adjusted the vertical position of the text
  #scale_fill_manual(values = c("non-serious" = "#88DD88", "serious" = "#FF6666")) +  # Dimmed shades of green and red
  theme(legend.position = "none",      # Remove the legend
        plot.title = element_text(hjust = 0.5))  # Center the title
```

```{r}
daily_crime_count <- df %>%
  group_by(DATE.OCC) %>%
  summarize(Count = n()) %>%
  arrange(DATE.OCC)

# Calculate the average value
avg_value <- mean(daily_crime_count$Count)

ggplot(data = daily_crime_count, aes(x = DATE.OCC, y = Count)) +
  geom_line(color = "#4A90E2") +  
  labs(title = "Daily Crime Counts", x = "Date The Crime Occurred", y = "Count") +
  geom_hline(yintercept = avg_value, linetype = "dashed", color = "red") +
  geom_text(aes(x = max(DATE.OCC), y = avg_value + max(Count) * 0.02, 
                label = paste("Average:", round(avg_value, 0))), 
            color = "red", hjust = 0.78) +
  theme(legend.position = "none",      
        plot.title = element_text(hjust = 0.5),   
        axis.title.x = element_text(size=12), 
        axis.title.y = element_text(size=12))
```

```{r}
#Time, Day and Month
q1 <- ggplot(df, aes(x=time_hr, fill=crime_type))+
  geom_histogram(binwidth = 1, position="dodge", alpha=0.7)+
  labs(title = NULL, x = "Time of Day (24-Hour)", y = "Count") +
  scale_fill_discrete(name="Crime Type")  # Set legend title

q2 <- ggplot(df, aes(x=dt_weekday, fill=crime_type))+
  geom_bar(position="dodge")+
  labs(title = NULL, x = "Weekday", y = "Count") +
  theme(legend.position="none")

q3 <- filter(df, dt_year != 2023) %>%
  ggplot(aes(x=dt_month, fill=crime_type))+
  geom_bar(position="dodge")+
  labs(title = NULL, x = "Month", y = 'Count')+
  theme(legend.position="none")
```

```{r}
# Adjust the plot margins
margin_adjustment <- theme(plot.margin = margin(5, 5, 5, 5, "pt"))
q1 <- q1 + margin_adjustment
q2 <- q2 + margin_adjustment
q3 <- q3 + margin_adjustment

# Define a layout matrix
# The numbers in the matrix correspond to the plots:
# 1 = q3, 2 = q2, 3 = q1
# The layout matrix arranges q3 and q2 side by side in the first row,
# and q1 (stretched) in the second row.
layout_matrix <- rbind(c(1, 2),
                      c(3, 3)) # Stretching q1 across the width of the grid

# Combine the plots using the custom layout
grid.arrange(q3, q2, q1, layout_matrix = layout_matrix, 
             top="Crime Distribution by Month, Weekday, and Time of Day")
```

```{r}
# First plot
p1 <- ggplot(df, aes(x = AREA.NAME, fill = crime_type)) +
  geom_bar(position = "dodge", alpha = 0.7) +
  labs(x = "Precinct", y = "Count", fill = "Crime Type") +  # Removed title to avoid duplication
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))  # Rotate x-axis labels

# Second plot
p2 <- df %>% filter(dist_to_precinct < 10) %>%
  ggplot(aes(x = dist_to_precinct, fill = crime_type)) +
  geom_histogram(binwidth = 1, position = "dodge", alpha = 0.7) +
  labs(x = "Distance (in miles)", y = "Count", fill = "Crime Type")  # Removed title to avoid duplication

# Combine the two plots with a single title
grid.arrange(p1, p2, ncol = 1, top = "Crime Count and Distance to Precinct")
```

```{r}
# Assign plots to variables
p1 <- ggplot(df, aes(x = Vict.Age, fill = as.factor(crime_type))) +
  geom_histogram(binwidth = 10, position = "dodge", color = "black") +
  labs(title = NULL, 
       x = "Age", 
       y = "Count", 
       fill = "Crime Type") +
  theme(legend.position="none")

p2 <- ggplot(df, aes(x = Vict.Sex, fill = as.factor(crime_type))) +
  geom_bar(position = "dodge", color = "black") +
  labs(title = NULL, 
       x = "Sex", 
       y = "Count") +  # Removed the fill legend title
  theme_minimal() +
  theme(legend.position="none")  # Remove the legend

p3 <- ggplot(df, aes(x = Vict.Descent, fill = as.factor(crime_type))) +
  geom_bar(position = "dodge", color = "black") +
  labs(title = NULL, 
       x = "Descent", 
       y = "Count", 
       fill = "Crime Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability

# Adjust the plot margins
margin_adjustment <- theme(plot.margin = margin(5, 5, 5, 5, "pt"))
p1 <- p1 + margin_adjustment
p2 <- p2 + margin_adjustment
p3 <- p3 + margin_adjustment

# Define a layout matrix similar to the previous one, but for the new plots
# 1 = p1, 2 = p2, 3 = p3
# The layout matrix arranges p1 and p2 side by side in the first row,
# and p3 (stretched) in the second row.
layout_matrix_new <- rbind(c(1, 2),
                           c(3, 3)) # Stretching p3 across the width of the grid

# Use grid.arrange to display the plots with the custom layout
grid.arrange(p1, p2, p3, layout_matrix = layout_matrix_new, 
             top="Distribution by Victim Age, Sex, and Descent")
```

```{r}
str(df)
```

```{r}
#Creating a Clean Df only the columsn which will be used ahead

#list of columns to keep
column_keep <- c("crime_type","time_hr", "Vict.Age", "Vict.Sex", "Vict.Descent", "dist_to_precinct", "weapons_binary", "AREA.NAME", "dt_weekday", "dt_month")

#create new df with these columns
df2 <- df[,names(df) %in% column_keep]

str(df2)
```

## Model 1 : Logistic

```{r}
#creating dataframe for logistic regression
df_logi <- df2[,!names(df2) %in% c("AREA.NAME", "dt_weekday", "dt_month")]
str(df_logi)
```

```{r}
model_logi <- glm(crime_type ~ ., data=df_logi, family="binomial")
```

```{r}
summary(model_logi)
```

```{r}
exp(coef(model_logi))
```

```{r}
model_logi_1 <- glm(crime_type ~ time_hr + Vict.Age + Vict.Sex + dist_to_precinct + weapons_binary, family = "binomial", data = df_logi)
```

```{r}
model_logi_2 <- glm(crime_type ~ time_hr + Vict.Age + dist_to_precinct + weapons_binary, family = "binomial", data = df_logi)
```

```{r}
summary(model_logi_1)
```

```{r}
summary(model_logi_2)
```

```{r}
model_logi_interaction <- glm(crime_type ~ time_hr + Vict.Age + Vict.Sex + Vict.Descent + Vict.Sex * Vict.Descent + dist_to_precinct + weapons_binary, family = "binomial", data = df_logi)
```

```{r}
summary(model_logi_interaction)
```

```{r}
deviance_value <- deviance(model_logi)
deviance_value_1 <- deviance(model_logi_1)
deviance_value_2 <- deviance(model_logi_2)
deviance_value
deviance_value_1
deviance_value_2
```

```{r}
aic_value_base <- AIC(model_logi)
aic_value_alt_1 <- AIC(model_logi_1)
aic_value_alt_2 <- AIC(model_logi_2)
aic_value_base
aic_value_alt_1
aic_value_alt_2
```

```{r}
null_model <- glm(crime_type ~ 1, data = df_logi, family = "binomial")
null_deviance <- deviance(null_model)
model_deviance <- deviance(model_logi)
mcfaddens_pseudo_r2 <- 1 - (model_deviance / null_deviance)
mcfaddens_pseudo_r2
```

```{r}
roc_plot = roc(factor(df_logi$crime_type), fitted(model_logi))

# basic ROC plot
plot(roc_plot, main = "ROC Curve")

# calculate threshold
coords <- coords(roc_plot, "best")

# add  threshold and AOC value
text(x = coords$specificity, y = coords$sensitivity, labels = paste("Threshold:", coords$threshold), pos = 4, cex = 0.8)
text(x = coords$specificity, y = coords$sensitivity, labels = paste("AUC:", round(auc(roc_plot), 2)), pos = 2, cex = 0.8)
```

```{r}
predicted_probabilities <- fitted(model_logi)
predicted_classes <- ifelse(predicted_probabilities > 0.616, "1", "0")
```

```{r}
crime_type_numeric <- as.numeric(factor(df_logi$crime_type, levels = c("non-serious", "serious"))) - 1
```

```{r}
crime_type_factor <- factor(crime_type_numeric, levels = c("0", "1"))
predicted_factor <- factor(predicted_classes, levels = c("0", "1"))
```

```{r}
conf_matrix <- confusionMatrix(predicted_factor, crime_type_factor, positive = "1")
conf_matrix
```

do we require the below part? doesn't seem to be used, keeping it commented out

```{r}
#california_map <- map_data("county", "california")
```

Assesment

```{r}
vif(model_logi)
```

```{r}
roc_plot = roc(df_logi$crime_type, fitted(model_logi))

# basic ROC plot
plot(roc_plot, main = "ROC Curve")

# calculate threshold
coords <- coords(roc_plot, "best")

# add  threshold and AOC value
text(x = coords$specificity, y = coords$sensitivity, labels = paste("Threshold:", coords$threshold), pos = 4, cex = 0.8)
text(x = coords$specificity, y = coords$sensitivity, labels = paste("AUC:", round(auc(roc_plot), 2)), pos = 2, cex = 0.8)
```

```{r}
df_logi$predprobs <- predict(model_logi, type = "response")
plot(df_logi$predprobs, xlab = "Observations", ylab = "Predicted Probability", main = "Predicted Probabilities")
```

## Research question 2: **"What is the predicted number of crimes for a given area and time period?"**

## Methods

The focus of our statistical investigation addresses pivotal questions concerning the predictors of crime severity and the forecast of crime occurrences.Our methodology was designed to provide insights into crime patterns and to predict the number of crimes in a given area and time period.

Utilizing **Poisson regression**, an optimal approach for modeling count data, we aim to predict the frequency of crimes in Los Angeles with precision and statistical accuracy, leveraging the model's suitability for such discrete outcome variables. This model allows us to integrate time, date, and location variables, capturing the essence of crime occurrences over various periods and areas. By employing a Poisson regression model, we aim to dissect the frequency of crimes within the multifaceted urban setup of Los Angeles, identifying temporal and spatial hotspots of criminal activity.

Given the prediction nature, we've narrowed down our model to the following variables, and undergone **stepwise forward** selection and **cross-validation** to refine and optimize the predictive performance.

List of Predictor Variables

-   Independent Variables

    \- Time and Date: Time Occurred, Date Occurred

    \- Geographic Factor: Area

<!-- -->

-   Outcome Variable

    \- Count of Crimes (Generated by grouping the data set by the selected predictor variables)

```{r}
df_pois <- df2[,names(df2) %in% c("AREA.NAME", "dt_weekday","dt_month") ]
str(df_pois)
```

```{r}
df_daily <- df_pois %>%
  group_by(dt_weekday,dt_month,AREA.NAME)%>%
  summarise(count = n())
```

```{r}
#cross validation setup
set.seed(123)

split<-sample.split(df_daily$count,SplitRatio = 0.7)
train<-subset(df_daily,split==TRUE)
test<-subset(df_daily,split ==FALSE)
```

```{r}
#fitting the model 
model_pois <- glm(count ~ . , data = train, family = poisson)
model_forward <- step(model_pois, direction ="both")
summary(model_forward)
```

```{r}
# Predicting the outputs
predictions <- predict(model_forward, newdata = test, type='response')

# Add predictions to the test dataset
test$predict <- predictions

# Display the first few rows of the test dataset with predictions
head(test)
```

```{r}
# Summary of the model with exponentiated coefficients, confidence intervals, and p-values
exp_coef <- exp(coef(model_forward))
conf_int <- exp(confint(model_forward))
p_values <- summary(model_forward)$coefficients[, 4]

# Combine the exponentiated coefficients with their corresponding confidence intervals and p-values
results_summary <- cbind(exp_coef, conf_int, p_values)
results_summary
```

```{r}
rmse(test$count, test$predict)
```

```{r}
#To calcualte the R2
rsq <- function (x, y) cor(x, y) ^ 2
rs <- rsq(test$count, test$predict)
rs
```

```{r}
summary(test$count)
```

```{r}
summary(test$predict)
```

```{r}
#Testing the model, evaluation 
dispersiontest(model_forward)
```

## Results(WIP)

With forward step wise selection and cross validation methods to improve model, the deviance measures goodness of fit, with a null deviance of 35064 and a residual deviance of 5204, indicating a substantial improvement in model fit, resulting in an AIC value of 15356 with 4 Fisher Scoring iterations.

Our preliminary evaluation of the model's predictive accuracy, gauged through the RMSE, yielded a value of 42.59 to estimate the average difference between the predicted and observed crime counts. Additionally, the R-squared value of 0.82 reflected a strong linear relationship between the observed and predicted crime counts, explaining a substantial proportion of the variance in the crime data.

Preliminary examination of the model outputs suggests distinct spatial and temporal crime patterns.

-   **Day of the Week Matters:**Different weekdays impact crime differently. For example, crimes are more likely on weekends compared to others weekdays, and these differences are confirmed by the p-values associated with these coefficient.

-   **Monthly Trends in Crime:**Crime rates vary by month. Some months, like February and September, see fewer crimes, while others, like July and August, experience more. These patterns are statistically significant.

-   **Geographical Differences:**Crime rates differ by police area. Some areas have higher crime rates (e.g., "Southwest"), while others have lower rates (e.g., "Hollywood"). These variations are statistically significant, providing insights into local crime trends.

However, with a dispersion value of 4.07, it indicates potential problems with the model assumptions, likely due to factors such as Population Heterogeneity and Model Misspecification. Zero-Inflation and Correlation Among Observations have been ruled out. To address these issues, consider switching to a negative binomial model for better handling over-dispersion and troubleshoot Population Heterogeneity and Model Misspecification to improve the model.

Plot the predictions alongside observed counts, depicts the pattern of the number of crime varies from month to month weekday and weekends.

```{r}
ggplot(test, aes(x = dt_month , y = predict, colour = dt_weekday)) +
geom_point(aes(y = count), alpha = 0.5,
position = position_jitter(h = 0.2)) +
geom_line() + labs(x = "", y = "Number of crimes",
colour = "Weekday") + ggtitle("Predicted Number of crime by month")
```

+-------------------+----------------+---------------------------+----------------------------+----------+
|                   | **Coefficient\ | 2.50% Confidence Interval | 97.50% Confidence Interval | P Values |
|                   | Estimates**    |                           |                            |          |
+===================+================+===========================+============================+==========+
| (Intercept)       | 663.6024       | 655.4907                  | 671.7956                   | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Weekday: L        | 1.0563         | 1.0491                    | 1.0635                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Weekday: Q        | 1.0155         | 1.0085                    | 1.0225                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Weekday: C        | 0.9843         | 0.9776                    | 0.9911                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Weekday: 4        | 0.9729         | 0.9663                    | 0.9795                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Weekday: 5        | 0.9846         | 0.9778                    | 0.9915                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Weekday: 6        | 0.9705         | 0.9638                    | 0.9773                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 02         | 0.9399         | 0.9283                    | 0.9517                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 03         | 0.9715         | 0.9599                    | 0.9832                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 04         | 0.9515         | 0.9404                    | 0.9628                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 05         | 0.9971         | 0.9852                    | 1.0092                     | 6.40E-01 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 06         | 0.9868         | 0.9752                    | 0.9987                     | 2.94E-02 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 07         | 1.0335         | 1.0214                    | 1.0457                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 08         | 1.0163         | 1.0046                    | 1.0281                     | 6.20E-03 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 09         | 0.7242         | 0.715                     | 0.7335                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 10         | 0.768          | 0.7581                    | 0.778                      | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 11         | 0.7217         | 0.7125                    | 0.7309                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Month: 12         | 0.7238         | 0.714                     | 0.7336                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Central     | 1.0655         | 1.0509                    | 1.0803                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Devonshire  | 0.6458         | 0.6357                    | 0.6561                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Foothill    | 0.5268         | 0.518                     | 0.5356                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Harbor      | 0.6578         | 0.6474                    | 0.6683                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Hollenbeck  | 0.5846         | 0.5749                    | 0.5944                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Hollywood   | 0.8362         | 0.8236                    | 0.8491                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Mission     | 0.6311         | 0.621                     | 0.6413                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: N Hollywood | 0.7796         | 0.7681                    | 0.7914                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Newton      | 0.7854         | 0.7736                    | 0.7974                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Northeast   | 0.6819         | 0.6711                    | 0.6928                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Olympic     | 0.7951         | 0.7828                    | 0.8075                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Pacific     | 0.9285         | 0.9153                    | 0.9419                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Rampart     | 0.7423         | 0.731                     | 0.7538                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Southeast   | 0.8072         | 0.7954                    | 0.8193                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Southwest   | 0.8898         | 0.8769                    | 0.9029                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Topanga     | 0.6326         | 0.6224                    | 0.6429                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Van Nuys    | 0.6688         | 0.6583                    | 0.6793                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: West LA     | 0.7223         | 0.7108                    | 0.734                      | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: West Valley | 0.6547         | 0.6443                    | 0.6654                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
| Area: Wilshire    | 0.7505         | 0.7395                    | 0.7617                     | 0.00E+00 |
+-------------------+----------------+---------------------------+----------------------------+----------+
